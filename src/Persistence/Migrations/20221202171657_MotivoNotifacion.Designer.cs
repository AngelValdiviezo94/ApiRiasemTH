// <auto-generated />
using System;
using EnrolApp.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnrolApp.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221202171657_MotivoNotifacion")]
    partial class MotivoNotifacion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EnrolApp.Domain.Entities.Common.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias")
                        .HasColumnOrder(7);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("apellidos")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("CargoId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cargoId")
                        .HasColumnOrder(21);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("celular")
                        .HasColumnOrder(11);

                    b.Property<Guid?>("ClientePadreId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("clientePadreId")
                        .HasColumnOrder(22);

                    b.Property<string>("CodigoConvivencia")
                        .HasColumnType("varchar")
                        .HasColumnName("codigoConvivencia")
                        .HasColumnOrder(2);

                    b.Property<string>("CodigoIntegracion")
                        .HasColumnType("varchar")
                        .HasColumnName("codigoIntegracion")
                        .HasColumnOrder(1);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("correo")
                        .HasColumnOrder(14);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion")
                        .HasColumnOrder(10);

                    b.Property<string>("DispositivoId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dispositivoId")
                        .HasColumnOrder(20);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(19);

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaNacimiento")
                        .HasColumnOrder(15);

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fechaRegistro")
                        .HasColumnOrder(17)
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("genero")
                        .HasColumnOrder(16);

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion")
                        .HasColumnOrder(4);

                    b.Property<string>("IndentificacionFamiliar")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("indentificacionFamiliar")
                        .HasColumnOrder(13);

                    b.Property<double>("Latitud")
                        .HasColumnType("float")
                        .HasColumnName("latitud")
                        .HasColumnOrder(8);

                    b.Property<double>("Longitud")
                        .HasColumnType("float")
                        .HasColumnName("longitud")
                        .HasColumnOrder(9);

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("varchar")
                        .HasColumnName("nombreUsuario")
                        .HasColumnOrder(23);

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombres")
                        .HasColumnOrder(5);

                    b.Property<bool>("ServicioActivo")
                        .HasColumnType("bit")
                        .HasColumnName("servicioActivo")
                        .HasColumnOrder(18);

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tipoIdentificacion")
                        .HasColumnOrder(3);

                    b.Property<string>("TipoIdentificacionFamiliar")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tipoIdentificacionFamiliar")
                        .HasColumnOrder(12);

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("CL_Cliente", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Common.TrackingSolicitud", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ColaboradorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("colaboradorId")
                        .HasColumnOrder(3);

                    b.Property<Guid>("EstadoSolicitudId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("estadoSolicitudId")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaRegistro")
                        .HasColumnOrder(5);

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identificacion")
                        .HasColumnOrder(2);

                    b.Property<Guid>("SolicitudId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("solicitudId")
                        .HasColumnOrder(1);

                    b.Property<Guid>("TipoFeatureId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tipoFeatureId")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("AS_TrackingSolicitud", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.BitacoraNotificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("clienteId")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValue("A")
                        .HasColumnName("estado")
                        .HasColumnOrder(9);

                    b.Property<string>("EstadoLeido")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValue("N")
                        .HasColumnName("estadoLeido")
                        .HasColumnOrder(8);

                    b.Property<Guid>("EventoDifusionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("eventoDifusionId")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaActualizacion")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(6)
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion")
                        .HasColumnOrder(12);

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("varchar(800)")
                        .HasColumnName("mensaje")
                        .HasColumnOrder(5);

                    b.Property<string>("MensajeHtml")
                        .HasMaxLength(800)
                        .HasColumnType("varchar(800)")
                        .HasColumnName("mensajeHtml")
                        .HasColumnOrder(11);

                    b.Property<Guid?>("ReferenciaClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("referenciaClienteId")
                        .HasColumnOrder(4);

                    b.Property<string>("Resumen")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("resumen")
                        .HasColumnOrder(13);

                    b.Property<Guid?>("SolicitudId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("solicitudId")
                        .HasColumnOrder(3);

                    b.Property<string>("TipoSolicitud")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("tipoSolicitud")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EventoDifusionId");

                    b.ToTable("NT_BitacoraNotificacion", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.Clasificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValue("A")
                        .HasColumnName("estado")
                        .HasColumnOrder(5);

                    b.Property<int>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("orden")
                        .HasColumnOrder(4);

                    b.Property<string>("UriImage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uriImage")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("NT_Clasificacion", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(2);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(3);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValue("A")
                        .HasColumnName("estado")
                        .HasColumnOrder(4);

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("featureId")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("NT_Evento", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.EventoDifusion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ClasificacionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("clasificacionId")
                        .HasColumnOrder(2);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(4);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(5);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValue("A")
                        .HasColumnName("estado")
                        .HasColumnOrder(7);

                    b.Property<Guid>("EventoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("eventoId")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PlantillaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("plantillaId")
                        .HasColumnOrder(3);

                    b.Property<string>("UriImage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uriImage")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("ClasificacionId");

                    b.HasIndex("EventoId");

                    b.HasIndex("PlantillaId");

                    b.ToTable("NT_EventoDifusion", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CanalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("canalId")
                        .HasColumnOrder(1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(2);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(4);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar")
                        .HasDefaultValue("A")
                        .HasColumnName("estado")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(10);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar")
                        .HasColumnName("nombre")
                        .HasColumnOrder(3);

                    b.Property<int?>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("orden")
                        .HasColumnOrder(5);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(7);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(9);

                    b.HasKey("Id");

                    b.ToTable("WF_Feature", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.NotificacionMotivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AprobadorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("aprobadorId")
                        .HasColumnOrder(3);

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(6);

                    b.Property<Guid>("TipoFeatureId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tipoFeatureId")
                        .HasColumnOrder(1);

                    b.Property<Guid>("TipoMotivoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tipoMotivoId")
                        .HasColumnOrder(2);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(5);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("AprobadorId");

                    b.HasIndex("TipoFeatureId");

                    b.ToTable("NT_NotificacionMotivo", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.Plantilla", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(1);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValue("A")
                        .HasColumnName("estado")
                        .HasColumnOrder(7);

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("varchar(800)")
                        .HasColumnName("mensaje")
                        .HasColumnOrder(2);

                    b.Property<string>("MensajeHtml")
                        .HasMaxLength(800)
                        .HasColumnType("varchar(800)")
                        .HasColumnName("MensajeHtml")
                        .HasColumnOrder(8);

                    b.Property<bool>("Relevante")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("relevante")
                        .HasColumnOrder(4);

                    b.Property<bool>("RequiereAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("requiereAccion")
                        .HasColumnOrder(5);

                    b.Property<bool>("RequiereEvalVariables")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("requiereEvalVariables")
                        .HasColumnOrder(10);

                    b.Property<bool>("RequiereNivelDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("requiereNivelDetalle")
                        .HasColumnOrder(9);

                    b.Property<string>("Resumen")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("resumen")
                        .HasColumnOrder(3);

                    b.Property<string>("UriImage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uriImage")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("NT_Plantilla", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(2);

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("empresaId")
                        .HasColumnOrder(1);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(4);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("OG_Area", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CargoPadreId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cargoPadreId")
                        .HasColumnOrder(4);

                    b.Property<Guid>("DepartamentoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("departamentoId")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(3);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar")
                        .HasColumnName("estado")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaCreacion")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaModificacion")
                        .HasColumnOrder(9);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar")
                        .HasColumnName("nombre")
                        .HasColumnOrder(2);

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioCreacion")
                        .HasColumnOrder(6);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar")
                        .HasColumnName("usuarioModificacion")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("WF_Cargo", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Departamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AreaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("areaId")
                        .HasColumnOrder(1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(4);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("OG_Departamento", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(7);

                    b.Property<Guid>("GrupoEmpresarialId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("grupoEmpresarialId")
                        .HasColumnOrder(1);

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary")
                        .HasColumnName("logo")
                        .HasColumnOrder(6);

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreComercial")
                        .HasColumnOrder(4);

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("razonSocial")
                        .HasColumnOrder(5);

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ruc")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("GrupoEmpresarialId");

                    b.ToTable("OG_Empresa", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.GrupoEmpresarial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(1);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(4);

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary")
                        .HasColumnName("logo")
                        .HasColumnOrder(3);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("OG_GrupoEmpresarial", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Suscripcion.Prospecto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias")
                        .HasColumnOrder(8);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("apellidos")
                        .HasColumnOrder(7);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("celular")
                        .HasColumnOrder(9);

                    b.Property<Guid>("DepartamentoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("departamentoId")
                        .HasColumnOrder(3);

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("email")
                        .HasColumnOrder(12);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(13);

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion")
                        .HasColumnOrder(5);

                    b.Property<string>("IndentificacionFamiliar")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("indentificacionFamiliar")
                        .HasColumnOrder(11);

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombres")
                        .HasColumnOrder(6);

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tipoIdentificacion")
                        .HasColumnOrder(4);

                    b.Property<string>("TipoIdentificacionFamiliar")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tipoIdentificacionFamiliar")
                        .HasColumnOrder(10);

                    b.Property<Guid>("TipoRelacionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tipoRelacionId")
                        .HasColumnOrder(1);

                    b.Property<Guid>("TipoSuscriptorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tipoSuscriptorId")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("TipoRelacionId");

                    b.HasIndex("TipoSuscriptorId");

                    b.ToTable("CL_Prospecto", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Suscripcion.TipoRelacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("CL_TipoRelacion", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Suscripcion.TipoSuscriptor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("codigo")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion")
                        .HasColumnOrder(2);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("estado")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("CL_TipoSuscriptor", "dbo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Common.Cliente", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Organizacion.Cargo", "Cargo")
                        .WithMany("Cliente")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.BitacoraNotificacion", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Common.Cliente", "Cliente")
                        .WithMany("ListaBitacoraNotif")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolApp.Domain.Entities.Notificacion.EventoDifusion", "EventoDifusion")
                        .WithMany("ListaBitacoraNotif")
                        .HasForeignKey("EventoDifusionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EventoDifusion");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.Evento", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Notificacion.Feature", "Feature")
                        .WithMany("Eventos")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.EventoDifusion", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Notificacion.Clasificacion", "Clasificacion")
                        .WithMany("EventosDifusion")
                        .HasForeignKey("ClasificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolApp.Domain.Entities.Notificacion.Evento", "Evento")
                        .WithMany("EventosDifusion")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolApp.Domain.Entities.Notificacion.Plantilla", "Plantilla")
                        .WithMany("EventosDifusion")
                        .HasForeignKey("PlantillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clasificacion");

                    b.Navigation("Evento");

                    b.Navigation("Plantilla");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.NotificacionMotivo", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Common.Cliente", "Cliente")
                        .WithMany("NotificacionMotivo")
                        .HasForeignKey("AprobadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolApp.Domain.Entities.Notificacion.Feature", "Feature")
                        .WithMany("NotificacionMotivo")
                        .HasForeignKey("TipoFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Area", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Organizacion.Empresa", "Empresa")
                        .WithMany("Areas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Cargo", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Organizacion.Departamento", "Departamento")
                        .WithMany("Cargos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Departamento", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Organizacion.Area", "Area")
                        .WithMany("Departamentos")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Empresa", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Organizacion.GrupoEmpresarial", "GrupoEmpresarial")
                        .WithMany("Empresas")
                        .HasForeignKey("GrupoEmpresarialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoEmpresarial");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Suscripcion.Prospecto", b =>
                {
                    b.HasOne("EnrolApp.Domain.Entities.Organizacion.Departamento", "Departamento")
                        .WithMany("Prospectos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolApp.Domain.Entities.Suscripcion.TipoRelacion", "TipoRelacion")
                        .WithMany("Prospectos")
                        .HasForeignKey("TipoRelacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolApp.Domain.Entities.Suscripcion.TipoSuscriptor", "TipoSuscriptor")
                        .WithMany("Prospectos")
                        .HasForeignKey("TipoSuscriptorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("TipoRelacion");

                    b.Navigation("TipoSuscriptor");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Common.Cliente", b =>
                {
                    b.Navigation("ListaBitacoraNotif");

                    b.Navigation("NotificacionMotivo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.Clasificacion", b =>
                {
                    b.Navigation("EventosDifusion");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.Evento", b =>
                {
                    b.Navigation("EventosDifusion");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.EventoDifusion", b =>
                {
                    b.Navigation("ListaBitacoraNotif");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.Feature", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("NotificacionMotivo");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Notificacion.Plantilla", b =>
                {
                    b.Navigation("EventosDifusion");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Area", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Cargo", b =>
                {
                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Departamento", b =>
                {
                    b.Navigation("Cargos");

                    b.Navigation("Prospectos");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.Empresa", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Organizacion.GrupoEmpresarial", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Suscripcion.TipoRelacion", b =>
                {
                    b.Navigation("Prospectos");
                });

            modelBuilder.Entity("EnrolApp.Domain.Entities.Suscripcion.TipoSuscriptor", b =>
                {
                    b.Navigation("Prospectos");
                });
#pragma warning restore 612, 618
        }
    }
}
